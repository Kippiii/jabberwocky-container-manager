[tool.poetry]
name = "jabberwocky-container-manager"
version = "0.1.0"
description = "Container manager for the Jabberwocky project"
authors = ["Kippiii <ianorzel@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10,<3.12"
black = "^22.8.0"
mypy = "^0.982"
pylint = "^2.15.3"
pytest = "^7.1.3"
pexpect = "^4.8.0"
pyinstaller = "^5.6.2"
psutil = "^5.9.4"
paramiko = "^2.12.0"
PyGithub = "^1.57"
pytest-reportlog = "^0.1.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_degs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
local_partial_types = true
strict_concatenate = true
strict_equality = true
show_error_codes = true


[tool.pylint.basic]
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
class-attribute-naming-style = "snake_case"
class-const-naming-style = "UPPER_CASE"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
function-naming-style = "snake_case"
good-names = ["i", "j", "k", "ex", "Run", "_", "f", "p"]
method-naming-style = "snake_case"
module-naming-style = "snake_case"
variable-naming-style = "snake_case"
[tool.pylint.classes]
valid-classmethod-first-arg = ["cls"]
valid-metaclass-classmethod-first-arg = ["cls"]
[tool.pylint.design]
max-args = 999
max-attributes = 999
max-bool-expr = 999
min-public-methods = -1
[tool.pylint.format]
max-line-length = 88
